#####################################################
#
# SheepShear, A PowerPC Mac emulator
# Forked from SheepShaver
#
# scons build script, all roads lead to Rome
# 2012, Alexander von Gluck
#
#####################################################
import SCons
import os
import platform
import sys

# Add a dependency to build system
def dependpkg(environment, package, friendly):
	print 'Checking for ' + package + '...'
	environment.ParseConfig('pkg-config --cflags --libs ' + package)
	environment.Append(CPPDEFINES = ['ENABLE_' + friendly])
	return;

# Add build options
use_debug = ARGUMENTS.get('debug', 0)
use_sdl = ARGUMENTS.get('sdl', 0)

# Common build environment items
env = Environment()
machineOS = platform.system()
machineCPU = platform.machine()

# Enable compiler overrides
if os.environ.has_key('CC'):
	env['CC'] = os.environ['CC']
if os.environ.has_key('CXX'):
	env['CXX'] = os.environ['CXX']

if int(use_debug):
	env.Append(CCFLAGS = '-g')
if int(use_sdl):
	env.Append(CPPDEFINES = ['USE_SDL', 'USE_SDL_AUDIO', 'USE_SDL_VIDEO'])

env.Append(CPPDEFINES = ['_REENTRANT', 'DATADIR=\\"/usr/share/SheepShear\\"','REAL_ADDRESSING=1']);

env.Append(CPPPATH = [
	'#/src/include',
	'#/src/kpx_cpu/include',
	'#/src/kpx_cpu/src',
	'#/src/slirp',
	'#/build-release'])

# Common source code
source_code = Glob('#/src/*.cpp')
source_code += Glob('#/src/slirp/*.c')

# TODO: Only non-jit for the moment
cpu_code = ['#/src/kpx_cpu/src/mathlib/ieeefp.cpp', '#/src/kpx_cpu/src/mathlib/mathlib.cpp',
	'#/src/kpx_cpu/src/cpu/ppc/ppc-cpu.cpp', '#/src/kpx_cpu/src/cpu/ppc/ppc-decode.cpp',
	'#/src/kpx_cpu/src/cpu/ppc/ppc-execute.cpp', '#/src/kpx_cpu/src/cpu/ppc/ppc-translate.cpp',
	'#/src/kpx_cpu/src/utils/utils-cpuinfo.cpp', '#/src/kpx_cpu/sheepshaver_glue.cpp']

if machineOS in ('Linux', 'FreeBSD'):
	env.Append(CPPDEFINES = ['HAVE_BYTESWAP_H', 'HAVE_SIGINFO_T'])
	env.Append(CPPPATH = ['#src/platform/Unix', '#/src/include/platform/Unix'])
	env.Append(LIBS = ['rt', 'm'])
	source_code += Glob('#/src/platform/Unix/*.cpp')
	source_code += Glob('#/src/platform/Unix/*.c')
	source_code += Glob('#/src/platform/Unix/Linux/*.cpp')
	source_code += Glob('#/src/platform/Dummy/prefs_dummy.cpp')
	dependpkg(env, 'gtk+-2.0', 'GTK')
	dependpkg(env, 'x11', 'X11')
	dependpkg(env, 'xext', 'XEXT')
	dependpkg(env, 'xxf86dga', 'XF86_DGA')
	dependpkg(env, 'xxf86vm', 'XF86_VIDMODE')
elif machineOS in ('Darwin'):
	env.Append(CPPDEFINES = ['HAVE_SIGINFO_T'])
	env.Append(CPPPATH = ['#src/platform/Unix', '#/src/include/platform/Darwin'])
	env.Append(CPPPATH = ['/Developer/SDKs/MacOSX10.6.sdk/usr/include'])
	env.Append(LIBS = ['rt', 'X'])
	source_code += Glob('#/src/platform/Unix/*.cpp')
	source_code += Glob('#/src/platform/Unix/*.c')
	source_code += Glob('#/src/platform/Unix/Linux/*.cpp')
	source_code += Glob('#/src/platform/Dummy/prefs_dummy.cpp')
elif machineOS in ('Haiku'):
	print "TODO: Haiku Support"
	sys.exit(1)
else:
	print "Unknown operating system!"
	sys.exit(1)


ppc_cpu_impl = env.Command('ppc-execute-impl.cpp', '#/src/kpx_cpu/src/cpu/ppc/ppc-decode.cpp',
	'$CC -E $_CPPINCFLAGS -DGENEXEC $SOURCE | /usr/bin/perl src/kpx_cpu/src/cpu/ppc/genexec.pl > $TARGET')

dyngen = env.Program('dyngen', ['#/src/kpx_cpu/src/cpu/jit/dyngen.c','#/src/kpx_cpu/src/cpu/jit/cxxdemangle.cpp'])
#env.Command('src-list.txt', dyngen, '$SOURCE $SRCGEN_ARGS > $TARGET')
sheepshear = env.Program('SheepShear', source_code + cpu_code)
Depends(sheepshear, ppc_cpu_impl)
Decider('MD5')
